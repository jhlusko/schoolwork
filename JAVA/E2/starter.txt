    /**
     * Returns the number of nodes in this Graph.
     * @return The number of nodes in this Graph.
     */
    public int getNumNodes() {
        return getNodes().size();   
    }
    
    /**
     * Returns the number of edges in this undirected Graph.
     * @return The number of edges in this undirected Graph. 
     */
    public int getNumEdges() {  
        int total = 0;
    
        for (T node : getNodes()) {
            total += getNeighbours(node).size();
        }
    
        return total / 2;
    }
  
    @Override
    public String toString() {       
        String result = "";
        result += "Number of nodes: " + getNumNodes() + "\n";
        result += "Number of edges: " + getNumEdges() + "\n";
        
        for (T node: getNodes()) {
            result += node + " is adjacent to: ";
            for  (T neighbour: getNeighbours(node)) {
                result += neighbour + " ";
            }
            result += "\n";
        }
        return result;
    }